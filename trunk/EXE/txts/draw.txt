以下x,y均为相对数(从屏幕左上角起算,而不是逻辑原点)
人物:
x:X-WIDTH/2	X/Y: in save X:32X+16H-VX
y:Y+LAYER+A	WIDTH/HEIGHT: in MGO
l:LAYER+6	LAYER: in save

NPC:
x:X-WIDTH/2	X/Y: in sss0
y:Y+LAYER+9
l:LAYER+2	LAYER: in sss0 * 8

TILE:
x:32X+16H-16-VX VX/VY:视口左上角x/y X-16
y:16Y+8H+7+l-VY Y+l+7
l:底层LAYER*8   LAYER: in map
  高层LAYER*8+1 WIDTH/HEIGHT: in mgo

drawing:
x':x
y':y-l-HEIGHT

示例计算——均为16进制——以初始李逍遥和李大娘(dos版)，在dosbox调试版下验证通过：
李逍遥在脚本
1f12: 0046 0029 0012 0000 ;设置队员块位置 41 18 0
确立的位置，横纵向分别为29*20+0*10-=520,12*10+0*8=120,由于视口与主队员位置的相互调整，最后X,Y为A0,70(相对的，视口xy为520-A0=480,120-70=b0)，据此x,y,l为(躺李逍遥的宽长分别为2d,1f)A0-2d/2=95,70+0+A=7a,0+6=6(默认队内人物的显示层在0),最终显示时x'=95,y'=7a-6-1f=55。(x',y'为开始画图的屏幕左上角起始座标)
李大娘在sss0里指定横纵向座标,LAYER为530,128,0，X,Y计算得530-480(在上式得)=B0,128-b0=78,x/y/l(执铲李大娘W/H:40,3d):B0-40/2=90,78+0+A=82,0+2=2,故x'=90,y'=82-2-3d=43。
看起来似乎有问题……其实是执铲李大娘图为保持动作大小一致将自身空白设到很大。嗯，画出来就清楚了。

扫描线
每线结构:长度 偏移 段址 Next
数组链表
有主角时，以主角为中心，每扫描线分两段
NPC增入时直接把数据增入段，以链表形式链入
砖块链表：

战
1、计算击退位置：+=max*rnd(0)
2、loop:1~arg2
	有效H(不包括底菜单)分割扫描线
	若法昏+场昏>0，昏
	call loop enemy_number~0
		若未[enemy+6]>0 && <99 &battle_semaphore && 未眠 && 未定
			


c:一直都是脚底板正中央
yb_max=
yp=

for(int vy=yb_max-rle_height_blocks;vy<=yb_max;vy++)
	for(int vx=xb_max-rle_width_blocks_div2;vx<=xb_max+rle_width_blocks_div2;vx++)
		calc_redraw(vx,vy,h,yp);
		calc_redraw(vx-1,vy,h,yp);
		calc_redraw(vx+1,vy,h,yp);
		calc_redraw(h?vx+1:vx,h?vy+1:vy,!h,yp);
		calc_redraw(h?vx:vx-1,h?vy+1:vy,!h,yp);

calc_redraw:
if((lowlayer+y)*16+h*8+8>=yp


















